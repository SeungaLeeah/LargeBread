{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; // 액션함수를 위한 hooks 사용\n\nimport { pending, fulfilled, rejected } from '../Action';\nimport axios from 'axios';\nconst API_URL = \"http://localhost:3001/ca/\";\n/* 다중행 데이터 조회를 위한 비동기 함수 */\n\nexport const getList = createAsyncThunk('LargeBreadSlice/getList', async (payload, _ref) => {\n  let {\n    rejectValue\n  } = _ref;\n  let result = null;\n\n  try {\n    result = await axios.get(API_URL, {\n      params: {\n        query: payload === null || payload === void 0 ? void 0 : payload.query,\n        page: payload.page,\n        rows: payload.rows\n      }\n    });\n  } catch (err) {\n    result = rejectValue(err.response);\n  }\n\n  return result;\n});\n/* 단일행 데이터 조회를 위한 비동기 함수 */\n\nexport const getItem = createAsyncThunk('LargeBreadSlice/ getItem', async (payload, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  let result = null;\n\n  try {\n    result = await axios.get(`${API_URL}${payload === null || payload === void 0 ? void 0 : payload.id}/`);\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n\n  return result;\n});\n/* 데이터 저장을 위한 비동기 함수 */\n\n/* 데이터 수정을 위한 비동기 함수 */\n\n/* 데이터 삭제를 위한 비동기 함수 */\n\nconst LargeBreadSlice = createSlice({\n  name: 'LargeBreadSlice',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    /* 다중행 데이터 조회를 위한 액션 함수 */\n    [getList.pending]: pending,\n    [getList.fulfilled]: fulfilled,\n    [getList.rejected]: rejected,\n\n    /* 단일행 데이터 조회를 위한 액션 함수 */\n    [getList.pending]: pending,\n    [getList.fulfilled]: fulfilled,\n    [getList.rejected]: rejected,\n\n    /* 데이터 저장을 위한 액션 함수 */\n    [postItem.pending]: pending,\n    [postItem.fulfilled]: fulfilled,\n    [postItem.rejected]: rejected,\n\n    /* 데이터 수정을 위한 액션 함수 */\n    [putItem.pending]: pending,\n    [putItem.fulfilled]: fulfilled,\n    [putItem.rejected]: rejected,\n\n    /* 데이터 삭제를 위한 액션 함수 */\n    [deleteItem.pending]: pending,\n    [deleteItem.fulfilled]: fulfilled,\n    [deleteItem.rejected]: rejected\n  }\n});\nexport default LargeBreadSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","pending","fulfilled","rejected","axios","API_URL","getList","payload","rejectValue","result","get","params","query","page","rows","err","response","getItem","rejectWithValue","id","LargeBreadSlice","name","initialState","data","loading","error","reducers","extraReducers","postItem","putItem","deleteItem","reducer"],"sources":["C:/Users/leeah/LargeBread/src/slices/LargeBreadSlice.jsx"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\r\n// 액션함수를 위한 hooks 사용\r\nimport {pending, fulfilled, rejected} from '../Action';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = \"http://localhost:3001/ca/\";\r\n\r\n/* 다중행 데이터 조회를 위한 비동기 함수 */\r\nexport const getList = createAsyncThunk('LargeBreadSlice/getList', async(payload,{rejectValue})=>{\r\n  let result = null;\r\n  \r\n  try {\r\n    result = await axios.get(API_URL,{\r\n      params:{\r\n        query: payload?.query,\r\n        page: payload.page,\r\n        rows: payload.rows\r\n      }\r\n    });\r\n  }catch(err){\r\n    result = rejectValue(err.response);\r\n  }\r\n  return result;\r\n});\r\n\r\n/* 단일행 데이터 조회를 위한 비동기 함수 */\r\nexport const getItem  = createAsyncThunk('LargeBreadSlice/ getItem', async(payload, {rejectWithValue})=>{\r\n  let result = null;\r\n\r\n  try{\r\n    result= await axios.get(`${API_URL}${payload?.id}/`);\r\n  }catch(err){\r\n    result = rejectWithValue(err.response);\r\n  }\r\n  return result;\r\n});\r\n/* 데이터 저장을 위한 비동기 함수 */\r\n\r\n/* 데이터 수정을 위한 비동기 함수 */\r\n\r\n/* 데이터 삭제를 위한 비동기 함수 */\r\nconst LargeBreadSlice = createSlice({\r\n  name: 'LargeBreadSlice',\r\n  initialState: {\r\n    data: null,       \r\n    loading: false, \r\n    error:null        \r\n  },\r\n  reducers: {},\r\n  extraReducers: { \r\n  /* 다중행 데이터 조회를 위한 액션 함수 */\r\n  [getList.pending]: pending,\r\n  [getList.fulfilled]: fulfilled,\r\n  [getList.rejected]: rejected,\r\n\r\n  /* 단일행 데이터 조회를 위한 액션 함수 */\r\n  [getList.pending]: pending,\r\n  [getList.fulfilled]: fulfilled,\r\n  [getList.rejected]: rejected,\r\n\r\n  /* 데이터 저장을 위한 액션 함수 */\r\n  [postItem.pending]: pending,\r\n  [postItem.fulfilled]: fulfilled,\r\n  [postItem.rejected]: rejected,\r\n\r\n  /* 데이터 수정을 위한 액션 함수 */\r\n  [putItem.pending]: pending,\r\n  [putItem.fulfilled]: fulfilled,\r\n  [putItem.rejected]: rejected,\r\n\r\n  /* 데이터 삭제를 위한 액션 함수 */\r\n  [deleteItem.pending]: pending,\r\n  [deleteItem.fulfilled]: fulfilled,\r\n  [deleteItem.rejected]: rejected,\r\n\r\n  },\r\n});\r\n\r\nexport default LargeBreadSlice.reducer;\r\n"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C,C,CACA;;AACA,SAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,WAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CAAC,yBAAD,EAA4B,OAAMO,OAAN,WAA8B;EAAA,IAAhB;IAACC;EAAD,CAAgB;EAC/F,IAAIC,MAAM,GAAG,IAAb;;EAEA,IAAI;IACFA,MAAM,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUL,OAAV,EAAkB;MAC/BM,MAAM,EAAC;QACLC,KAAK,EAAEL,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEK,KADX;QAELC,IAAI,EAAEN,OAAO,CAACM,IAFT;QAGLC,IAAI,EAAEP,OAAO,CAACO;MAHT;IADwB,CAAlB,CAAf;EAOD,CARD,CAQC,OAAMC,GAAN,EAAU;IACTN,MAAM,GAAGD,WAAW,CAACO,GAAG,CAACC,QAAL,CAApB;EACD;;EACD,OAAOP,MAAP;AACD,CAfsC,CAAhC;AAiBP;;AACA,OAAO,MAAMQ,OAAO,GAAIjB,gBAAgB,CAAC,0BAAD,EAA6B,OAAMO,OAAN,YAAmC;EAAA,IAApB;IAACW;EAAD,CAAoB;EACtG,IAAIT,MAAM,GAAG,IAAb;;EAEA,IAAG;IACDA,MAAM,GAAE,MAAML,KAAK,CAACM,GAAN,CAAW,GAAEL,OAAQ,GAAEE,OAAb,aAAaA,OAAb,uBAAaA,OAAO,CAAEY,EAAG,GAAnC,CAAd;EACD,CAFD,CAEC,OAAMJ,GAAN,EAAU;IACTN,MAAM,GAAGS,eAAe,CAACH,GAAG,CAACC,QAAL,CAAxB;EACD;;EACD,OAAOP,MAAP;AACD,CATuC,CAAjC;AAUP;;AAEA;;AAEA;;AACA,MAAMW,eAAe,GAAGrB,WAAW,CAAC;EAClCsB,IAAI,EAAE,iBAD4B;EAElCC,YAAY,EAAE;IACZC,IAAI,EAAE,IADM;IAEZC,OAAO,EAAE,KAFG;IAGZC,KAAK,EAAC;EAHM,CAFoB;EAOlCC,QAAQ,EAAE,EAPwB;EAQlCC,aAAa,EAAE;IACf;IACA,CAACrB,OAAO,CAACL,OAAT,GAAmBA,OAFJ;IAGf,CAACK,OAAO,CAACJ,SAAT,GAAqBA,SAHN;IAIf,CAACI,OAAO,CAACH,QAAT,GAAoBA,QAJL;;IAMf;IACA,CAACG,OAAO,CAACL,OAAT,GAAmBA,OAPJ;IAQf,CAACK,OAAO,CAACJ,SAAT,GAAqBA,SARN;IASf,CAACI,OAAO,CAACH,QAAT,GAAoBA,QATL;;IAWf;IACA,CAACyB,QAAQ,CAAC3B,OAAV,GAAoBA,OAZL;IAaf,CAAC2B,QAAQ,CAAC1B,SAAV,GAAsBA,SAbP;IAcf,CAAC0B,QAAQ,CAACzB,QAAV,GAAqBA,QAdN;;IAgBf;IACA,CAAC0B,OAAO,CAAC5B,OAAT,GAAmBA,OAjBJ;IAkBf,CAAC4B,OAAO,CAAC3B,SAAT,GAAqBA,SAlBN;IAmBf,CAAC2B,OAAO,CAAC1B,QAAT,GAAoBA,QAnBL;;IAqBf;IACA,CAAC2B,UAAU,CAAC7B,OAAZ,GAAsBA,OAtBP;IAuBf,CAAC6B,UAAU,CAAC5B,SAAZ,GAAwBA,SAvBT;IAwBf,CAAC4B,UAAU,CAAC3B,QAAZ,GAAuBA;EAxBR;AARmB,CAAD,CAAnC;AAqCA,eAAeiB,eAAe,CAACW,OAA/B"},"metadata":{},"sourceType":"module"}