{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; // 액션함수를 위한 hooks 사용\n\nimport { pending, fulfilled, rejected } from '../Action';\nimport axios from 'axios';\nconst API_URL = `http://localhost:3001`;\n/* 다중행 데이터 조회를 위한 비동기 함수 */\n\nexport const getList = createAsyncThunk('LargeBreadSlice/getList', async (payload, _ref) => {\n  let {\n    rejectValue\n  } = _ref;\n  let result = null;\n\n  try {\n    result = await axios.get(API_URL);\n  } catch (err) {\n    result = rejectValue(err.response);\n  }\n\n  return result;\n});\n/* 단일행 데이터 조회를 위한 비동기 함수 */\n\nexport const getItem = createAsyncThunk('LargeBreadSlice/getItem', async (payload, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  let result = null;\n\n  try {\n    result = await axios.get(`${API_URL}/product/${payload === null || payload === void 0 ? void 0 : payload.category_id}`);\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n\n  return result;\n});\n/* 데이터 저장을 위한 비동기 함수 */\n\nexport const postItem = createAsyncThunk('LargeBreadSlice/postItem', async (payload, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  let result = null;\n\n  try {\n    result = await axios.post(API_URL, {});\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n\n  return result;\n});\nconst LargeBreadSlice = createSlice({\n  name: 'LargeBreadSlice',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    /* 다중행 데이터 조회를 위한 액션 함수 */\n    [getList.pending]: pending,\n    [getList.fulfilled]: fulfilled,\n    [getList.rejected]: rejected,\n\n    /* 단일행 데이터 조회를 위한 액션 함수 */\n    [getItem.pending]: pending,\n    [getItem.fulfilled]: fulfilled,\n    [getItem.rejected]: rejected,\n\n    /* 데이터 저장을 위한 액션 함수 */\n    [postItem.pending]: pending,\n    [postItem.fulfilled]: (state, _ref4) => {\n      let {\n        meta,\n        payload\n      } = _ref4;\n      let data = null;\n\n      if (Array.isArray(state.data)) {\n        data = [...state.data];\n        data.push(payload.data);\n      } else {\n        data = payload.data;\n      }\n\n      return {\n        data: data,\n        loading: false,\n        error: null\n      };\n    },\n    [postItem.rejected]: rejected\n  }\n});\nexport default LargeBreadSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","pending","fulfilled","rejected","axios","API_URL","getList","payload","rejectValue","result","get","err","response","getItem","rejectWithValue","category_id","postItem","post","LargeBreadSlice","name","initialState","data","loading","error","reducers","extraReducers","state","meta","Array","isArray","push","reducer"],"sources":["C:/Users/leeah/LargeBread/src/slices/LargeBreadSlice.jsx"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\r\n// 액션함수를 위한 hooks 사용\r\nimport {pending, fulfilled, rejected} from '../Action';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = `http://localhost:3001`\r\n\r\n/* 다중행 데이터 조회를 위한 비동기 함수 */\r\nexport const getList = createAsyncThunk('LargeBreadSlice/getList', async(payload,{rejectValue})=>{\r\n  let result = null;\r\n  \r\n  try {\r\n    result = await axios.get(API_URL);\r\n  }catch(err){\r\n    result = rejectValue(err.response);\r\n  }\r\n  return result;\r\n});\r\n\r\n/* 단일행 데이터 조회를 위한 비동기 함수 */\r\nexport const getItem  = createAsyncThunk('LargeBreadSlice/getItem', async(payload, {rejectWithValue})=>{\r\n  let result = null;\r\n\r\n  try{\r\n    result= await axios.get(`${API_URL}/product/${payload?.category_id}`);\r\n  }catch(err){\r\n    result = rejectWithValue(err.response);\r\n  }\r\n  return result;\r\n});\r\n\r\n/* 데이터 저장을 위한 비동기 함수 */\r\nexport const postItem = createAsyncThunk('LargeBreadSlice/postItem', async(payload, { rejectWithValue})=>{\r\n  let result = null;\r\n  \r\n  try{\r\n    result = await axios.post(API_URL,{\r\n      \r\n    })\r\n  }catch(err){\r\n    result = rejectWithValue(err.response);\r\n  }\r\n  return result;\r\n});\r\n\r\nconst LargeBreadSlice = createSlice({\r\n  name: 'LargeBreadSlice',\r\n  initialState: {\r\n    data: null,       \r\n    loading: false, \r\n    error:null        \r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n\r\n  /* 다중행 데이터 조회를 위한 액션 함수 */\r\n  [getList.pending]: pending,\r\n  [getList.fulfilled]: fulfilled,\r\n  [getList.rejected]: rejected,\r\n\r\n  /* 단일행 데이터 조회를 위한 액션 함수 */\r\n  [getItem.pending]: pending,\r\n  [getItem.fulfilled]: fulfilled,\r\n  [getItem.rejected]: rejected,\r\n\r\n  /* 데이터 저장을 위한 액션 함수 */\r\n  [postItem.pending]: pending,\r\n  [postItem.fulfilled]: (state,{meta,payload})=>{\r\n    let data = null;\r\n\r\n    if(Array.isArray(state.data)){\r\n      data=[...state.data];\r\n      data.push(payload.data);\r\n    }else{\r\n      data=payload.data;\r\n    }\r\n    return{\r\n      data: data,\r\n      loading: false,\r\n      error: null\r\n    }\r\n  },\r\n  [postItem.rejected]: rejected,\r\n\r\n\r\n  },\r\n});\r\n\r\nexport default LargeBreadSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}