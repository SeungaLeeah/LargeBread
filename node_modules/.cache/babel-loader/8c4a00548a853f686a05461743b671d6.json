{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nimport { cloneDeep } from 'lodash';\nconst API_URL = `http://localhost:3001`;\n/* 데이터 저장을 위한 비동기 함수 */\n\nexport const addCart = createAsyncThunk('LargeBreadSlice/addCart', async (payload, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  let result = null;\n\n  try {\n    result = await axios.post(`${API_URL}/product`, {\n      amount: payload.amount,\n      product_id: payload.product_id\n    });\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n\n  return result;\n});\nconst PaySlice = createSlice({\n  name: 'addCart',\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: {\n    [addCart.pending]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        loading: true\n      };\n    },\n    [addCart.fulfilled]: (state, _ref3) => {\n      let {\n        meta,\n        payload\n      } = _ref3;\n      let data = [];\n\n      if (Array.isArray(state.data)) {\n        data = [...state.data];\n        data.push(payload.data);\n      } else {\n        data = payload.data;\n      }\n\n      return {\n        data: data,\n        loading: false,\n        error: null\n      };\n    },\n    [addCart.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return {\n        data: payload === null || payload === void 0 ? void 0 : payload.date,\n        loading: false,\n        error: {\n          code: payload !== null && payload !== void 0 && payload.status ? payload.status : 500,\n          message: payload !== null && payload !== void 0 && payload.statusText ? payload.statusText : 'Server Error'\n        }\n      };\n    }\n  }\n});\nexport default PaySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","cloneDeep","API_URL","addCart","payload","rejectWithValue","result","post","amount","product_id","err","response","PaySlice","name","initialState","data","loading","error","reducers","extraReducers","pending","state","fulfilled","meta","Array","isArray","push","rejected","date","code","status","message","statusText","reducer"],"sources":["C:/Users/leeah/LargeBread/src/slices/PaySlice.jsx"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport axios from 'axios';\r\nimport {cloneDeep} from 'lodash';\r\n\r\nconst API_URL = `http://localhost:3001`\r\n\r\n/* 데이터 저장을 위한 비동기 함수 */\r\nexport const addCart = createAsyncThunk('LargeBreadSlice/addCart', async(payload, { rejectWithValue})=>{\r\n    let result = null;\r\n    \r\n    try{\r\n        result = await axios.post(`${API_URL}/product`,{\r\n            amount: payload.amount,\r\n            product_id: payload.product_id\r\n      })\r\n    }catch(err){\r\n      result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n  });\r\n\r\n\r\nconst PaySlice = createSlice({\r\n  name: 'addCart',\r\n  initialState: {\r\n    data: null,       \r\n    loading: false, \r\n    error:null        \r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [addCart.pending]: (state, {payload})=>{\r\n      return{ ...state, loading: true}\r\n    },\r\n    [addCart.fulfilled]: (state,{meta,payload})=>{\r\n        let data = [];\r\n\r\n        if(Array.isArray(state.data)){\r\n          data=[...state.data];\r\n          data.push(payload.data);\r\n        }else{\r\n          data=payload.data;\r\n        }\r\n        return{\r\n          data: data,\r\n          loading: false,\r\n          error: null\r\n        }\r\n      },\r\n    [addCart.rejected]: (state,{payload})=>{\r\n      return{\r\n        data: payload?.date,\r\n        loading:false,\r\n        error:{\r\n          code: payload?.status ? payload.status:500,\r\n          message: payload?.statusText ? payload.statusText:'Server Error'\r\n        }\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default PaySlice.reducer;\r\n"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AAEA,MAAMC,OAAO,GAAI,uBAAjB;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAGJ,gBAAgB,CAAC,yBAAD,EAA4B,OAAMK,OAAN,WAAoC;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACnG,IAAIC,MAAM,GAAG,IAAb;;EAEA,IAAG;IACCA,MAAM,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAY,GAAEL,OAAQ,UAAtB,EAAgC;MAC3CM,MAAM,EAAEJ,OAAO,CAACI,MAD2B;MAE3CC,UAAU,EAAEL,OAAO,CAACK;IAFuB,CAAhC,CAAf;EAIH,CALD,CAKC,OAAMC,GAAN,EAAU;IACTJ,MAAM,GAAGD,eAAe,CAACK,GAAG,CAACC,QAAL,CAAxB;EACD;;EACD,OAAOL,MAAP;AACD,CAZoC,CAAhC;AAeP,MAAMM,QAAQ,GAAGd,WAAW,CAAC;EAC3Be,IAAI,EAAE,SADqB;EAE3BC,YAAY,EAAE;IACZC,IAAI,EAAE,IADM;IAEZC,OAAO,EAAE,KAFG;IAGZC,KAAK,EAAC;EAHM,CAFa;EAO3BC,QAAQ,EAAE,EAPiB;EAQ3BC,aAAa,EAAE;IACb,CAAChB,OAAO,CAACiB,OAAT,GAAmB,CAACC,KAAD,YAAoB;MAAA,IAAZ;QAACjB;MAAD,CAAY;MACrC,OAAM,EAAE,GAAGiB,KAAL;QAAYL,OAAO,EAAE;MAArB,CAAN;IACD,CAHY;IAIb,CAACb,OAAO,CAACmB,SAAT,GAAqB,CAACD,KAAD,YAAwB;MAAA,IAAjB;QAACE,IAAD;QAAMnB;MAAN,CAAiB;MACzC,IAAIW,IAAI,GAAG,EAAX;;MAEA,IAAGS,KAAK,CAACC,OAAN,CAAcJ,KAAK,CAACN,IAApB,CAAH,EAA6B;QAC3BA,IAAI,GAAC,CAAC,GAAGM,KAAK,CAACN,IAAV,CAAL;QACAA,IAAI,CAACW,IAAL,CAAUtB,OAAO,CAACW,IAAlB;MACD,CAHD,MAGK;QACHA,IAAI,GAACX,OAAO,CAACW,IAAb;MACD;;MACD,OAAM;QACJA,IAAI,EAAEA,IADF;QAEJC,OAAO,EAAE,KAFL;QAGJC,KAAK,EAAE;MAHH,CAAN;IAKD,CAlBU;IAmBb,CAACd,OAAO,CAACwB,QAAT,GAAoB,CAACN,KAAD,YAAmB;MAAA,IAAZ;QAACjB;MAAD,CAAY;MACrC,OAAM;QACJW,IAAI,EAAEX,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEwB,IADX;QAEJZ,OAAO,EAAC,KAFJ;QAGJC,KAAK,EAAC;UACJY,IAAI,EAAEzB,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAE0B,MAAT,GAAkB1B,OAAO,CAAC0B,MAA1B,GAAiC,GADnC;UAEJC,OAAO,EAAE3B,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAE4B,UAAT,GAAsB5B,OAAO,CAAC4B,UAA9B,GAAyC;QAF9C;MAHF,CAAN;IAQD;EA5BY;AARY,CAAD,CAA5B;AAwCA,eAAepB,QAAQ,CAACqB,OAAxB"},"metadata":{},"sourceType":"module"}