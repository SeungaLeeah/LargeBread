{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { pending, rejected } from '../Action';\nimport axios from 'axios';\nimport { cloneDeep } from 'lodash';\nconst API_URL = `http://localhost:3001`;\n/* 데이터 저장을 위한 비동기 함수 */\n\nexport const addCart = createAsyncThunk('LargeBreadSlice/addCart', async (payload, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  let result = null;\n\n  try {\n    result = await axios.post(`${API_URL}/product`, {\n      id: payload.id,\n      amount: payload.amount,\n      product_id: payload.product_id\n    });\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n\n  return result;\n});\nconst BasketSlice = createSlice({\n  name: 'basket',\n  initialState: {\n    basketItems: localStorage.getItem(\"basketItems\") ? JSON.parse(localStorage.getItem(\"basketItems\")) : [],\n    basketTotalQuantity: 0,\n    basketTotalAmount: 0,\n    basketQuantity: 0,\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    addToBasket(state, action) {\n      const itemIndex = state.basketItems.findIndex(item => item.id === action.payload.id);\n\n      if (itemIndex >= 0) {\n        state.basketItems[itemIndex].basketQuantity += 1;\n      } else {\n        const tempItem = { ...action.payload,\n          basketQuantity: 1\n        };\n        state.basketItems.push(tempItem);\n      }\n\n      localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\n    },\n\n    removeFromBasket(state, action) {\n      const nextBasketItems = state.basketItems.filter(basketItem => basketItem.id !== action.payload.id);\n      state.basketItems = nextBasketItems;\n      localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\n    },\n\n    DecreaseBasket(state, action) {\n      const itemIndex = state.basketItems.findIndex(basketItem => basketItem.id === action.payload.id);\n\n      if (state.basketItems[itemIndex].basketQuantity > 1) {\n        state.basketItems[itemIndex].basketQuantity -= 1;\n      } else if (state.basketItems[itemIndex].basketTotalQuantity === 1) {\n        const nextBasketItems = state.basketItems.filter(basketItem => basketItem.id !== action.payload.id);\n        state.basketItems = nextBasketItems;\n      }\n\n      localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\n    },\n\n    cleanBasket(state, action) {\n      state.basketItems = [];\n      localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\n    },\n\n    TotalPrice(state, action) {\n      let {\n        total,\n        quantity,\n        amount\n      } = state.basketItems.reduce((basketTotal, basketItem) => {\n        const {\n          price,\n          basketQuantity\n        } = basketItem;\n        const itemTotal = price * basketQuantity;\n        basketTotal.total += itemTotal;\n        basketTotal.quantity += basketQuantity;\n        basketTotal.amount = basketQuantity;\n        return basketTotal;\n      }, {\n        total: 0,\n        quantity: 0,\n        amount: 0\n      });\n      state.basketTotalQuantity = quantity;\n      state.basketTotalAmount = total;\n      state.basketQuantity = amount;\n    }\n\n  },\n  extraReducers: {\n    /* 데이터 저장을 위한 액션 함수 */\n    [addCart.pending]: pending,\n    [addCart.fulfilled]: (state, _ref2) => {\n      let {\n        meta,\n        payload\n      } = _ref2;\n      const data = cloneDeep(state.data);\n      data.item.unshift(payload.data.item);\n      data.item.pop();\n      return {\n        data: data,\n        loading: false,\n        error: null\n      };\n    },\n    [addCart.rejected]: rejected\n  }\n});\nexport const {\n  addToBasket,\n  removeFromBasket,\n  DecreaseBasket,\n  cleanBasket,\n  TotalPrice\n} = BasketSlice.actions;\nexport default BasketSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","pending","rejected","axios","cloneDeep","API_URL","addCart","payload","rejectWithValue","result","post","id","amount","product_id","err","response","BasketSlice","name","initialState","basketItems","localStorage","getItem","JSON","parse","basketTotalQuantity","basketTotalAmount","basketQuantity","data","loading","error","reducers","addToBasket","state","action","itemIndex","findIndex","item","tempItem","push","setItem","stringify","removeFromBasket","nextBasketItems","filter","basketItem","DecreaseBasket","cleanBasket","TotalPrice","total","quantity","reduce","basketTotal","price","itemTotal","extraReducers","fulfilled","meta","unshift","pop","actions","reducer"],"sources":["C:/Users/leeah/LargeBread/src/slices/BasketSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {pending, rejected} from '../Action';\r\nimport axios from 'axios';\r\nimport {cloneDeep} from 'lodash';\r\n\r\nconst API_URL = `http://localhost:3001`\r\n\r\n/* 데이터 저장을 위한 비동기 함수 */\r\nexport const addCart = createAsyncThunk('LargeBreadSlice/addCart', async(payload, { rejectWithValue})=>{\r\n    let result = null;\r\n    \r\n    try{\r\n        result = await axios.post(`${API_URL}/product`,{\r\n            id: payload.id,\r\n            amount: payload.amount,\r\n            product_id: payload.product_id\r\n      })\r\n    }catch(err){\r\n      result = rejectWithValue(err.response);\r\n    }\r\n    return result;\r\n  });\r\n\r\nconst BasketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState: {\r\n        basketItems: localStorage.getItem(\"basketItems\")\r\n        ? JSON.parse(localStorage.getItem(\"basketItems\"))\r\n        : [],\r\n        basketTotalQuantity: 0,\r\n        basketTotalAmount: 0,\r\n        basketQuantity:0,\r\n\r\n        data: null,       \r\n        loading: false, \r\n        error:null   \r\n    },\r\n    reducers:{\r\n        addToBasket(state, action){\r\n            const itemIndex = state.basketItems.findIndex(\r\n                (item)=> item.id === action.payload.id\r\n            );\r\n            if(itemIndex >= 0) { \r\n                state.basketItems[itemIndex].basketQuantity += 1;\r\n            }else{\r\n                const tempItem = {...action.payload, basketQuantity: 1};\r\n                state.basketItems.push(tempItem);\r\n            }\r\n            localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\r\n        },\r\n        removeFromBasket(state, action){\r\n            const nextBasketItems = state.basketItems.filter(\r\n                (basketItem) => basketItem.id !== action.payload.id\r\n            );\r\n            state.basketItems = nextBasketItems;\r\n            localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\r\n        },\r\n        DecreaseBasket(state, action){\r\n            const itemIndex = state.basketItems.findIndex(\r\n                (basketItem)=> basketItem.id === action.payload.id\r\n            );\r\n\r\n            if(state.basketItems[itemIndex].basketQuantity > 1){\r\n                state.basketItems[itemIndex].basketQuantity -= 1;\r\n            }else if(state.basketItems[itemIndex].basketTotalQuantity === 1){\r\n                const nextBasketItems = state.basketItems.filter(\r\n                    (basketItem) => basketItem.id !== action.payload.id\r\n                );\r\n                state.basketItems = nextBasketItems;\r\n            }\r\n            localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\r\n        },\r\n\r\n        cleanBasket(state, action){\r\n            state.basketItems=[]\r\n            localStorage.setItem(\"basketItems\", JSON.stringify(state.basketItems));\r\n        },\r\n        TotalPrice(state, action){\r\n          let {total,quantity, amount} = state.basketItems.reduce(\r\n                (basketTotal, basketItem)=>{\r\n                const {price, basketQuantity } = basketItem;\r\n                const itemTotal = price * basketQuantity;\r\n\r\n                basketTotal.total += itemTotal\r\n                basketTotal.quantity += basketQuantity\r\n                basketTotal.amount = basketQuantity\r\n\r\n                return basketTotal;\r\n                },\r\n                {\r\n                    total: 0,\r\n                    quantity: 0,\r\n                    amount:0,\r\n                }\r\n            );\r\n            state.basketTotalQuantity = quantity;\r\n            state.basketTotalAmount = total;\r\n            state.basketQuantity= amount;\r\n        }\r\n    },\r\n    extraReducers: {\r\n    /* 데이터 저장을 위한 액션 함수 */\r\n        [addCart.pending]: pending,\r\n        [addCart.fulfilled]: (state,{meta,payload})=>{\r\n            const data = cloneDeep(state.data);\r\n            data.item.unshift(payload.data.item);\r\n            data.item.pop();\r\n            return{\r\n                data: data,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        },\r\n        [addCart.rejected]: rejected,\r\n    }\r\n});\r\n\r\nexport const { addToBasket, removeFromBasket, DecreaseBasket, cleanBasket, TotalPrice } = BasketSlice.actions;\r\n\r\nexport default BasketSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}